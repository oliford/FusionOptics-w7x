package ipp.w7x.fusionOptics.w7x.aet20;

import fusionOptics.Util;
import fusionOptics.interfaces.NullInterface;
import fusionOptics.surfaces.Cylinder;
import fusionOptics.types.Optic;

/** Simple static beam line info for use in the ray tracer 
 * Generated by minerva-neutralBeams/src/seed.minerva.neutralBeams.w7x.DumpBeamLines
 * */
public class W7XBeamDefsSimple extends Optic {
	
	public static final double nbiStart[][] = {
		{3.480123, 5.144472, -0.305}, 
		{3.415672, 5.175421, -0.305}, 
		{3.415672, 5.175421, -0.305}, 
		{3.480123, 5.144472, -0.305}, 
		{0.2787, 6.194685, 0.305}, 
		{0.208366, 6.20753, 0.305}, 
		{0.208366, 6.20753, 0.305}, 
		{0.2787, 6.194685, 0.305}, 
	};
	
	public static final double nbiUnit[][] = {
		{-0.365971, -0.926698, 0.085417}, 
		{-0.494403, -0.865026, 0.085417}, 
		{-0.494403, -0.865026, -0.085417}, 
		{-0.365971, -0.926698, -0.085417}, 
		{-0.108469, -0.990423, -0.085417}, 
		{-0.248623, -0.964827, -0.085417}, 
		{-0.248623, -0.964827, 0.085417}, 
		{-0.108469, -0.990423, 0.085417}, 
	};

	
	public W7XBeamDefsSimple() {
		super("W7XBeamDefsSimple");
		double beamLength = 2.000;
		double beamRadius = 0.100;
		for(int i=0; i < nbiStart.length; i++){
			double centre[] = Util.plus(nbiStart[i], Util.mul(nbiUnit[i], beamLength/2));
			Cylinder clyd = new Cylinder("beam_"+i, 
					centre, nbiUnit[i], beamRadius, beamLength, NullInterface.ideal());
			addElement(clyd);
		}
	
	}
}
